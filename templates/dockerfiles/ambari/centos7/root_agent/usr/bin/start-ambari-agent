#!/usr/bin/env python2
from __future__ import print_function

import os
import signal
import subprocess
import sys
import time

import psutil
import requests

AGENT_PID_FILE = "/var/run/ambari-agent/ambari-agent.pid"
AMBARI_SERVER_HOSTNAME = os.environ.get("AMBARI_SERVER_HOSTNAME", "localhost")


def _pid_from_file(file_path):
    return int(open(file_path, "r").read().strip())


def info(message):
    print("[INFO] {message}".format(message=message))
    sys.stdout.flush()


def error(message):
    print("[ERROR] {message}".format(message=message))
    sys.stdout.flush()


def execute_process(cmd, env=None, do_color=False, color='\033[92m'):
    proc = subprocess.Popen(
        cmd,
        shell=True,
        env=env,
        stderr=subprocess.STDOUT,
        stdout=sys.stdout
    )

    if do_color:
        sys.stdout.write(color)
        sys.stdout.flush()

    proc.communicate()

    if do_color:
        sys.stdout.write("\x1b[0m")
        sys.stdout.flush()

    return proc.returncode


def run_cmd(*args, **kwargs):
    try:
        return subprocess.check_call(*args, **kwargs), 0
    except subprocess.CalledProcessError as e:
        return e.output, e.returncode


def start_ambari_agent_process():
    info("About to start ambari-agent...")
    if execute_process("ambari-agent reset {0}".format(AMBARI_SERVER_HOSTNAME), do_color=True) != 0:
        raise Exception("Failed to set server hostname")
    code = execute_process("ambari-agent start", do_color=True)
    if code != 0:
        raise Exception("Failed to start agent")
    process = psutil.Process(pid=_pid_from_file(AGENT_PID_FILE))
    info("Ambari agent started")
    return process


def stop_ambari_agent_process():
    info("About to stop ambari-agent...")
    code = execute_process("ambari-agent stop", do_color=True)
    info("Ambari agent gracefully stopped")


if __name__ == "__main__":
    def stop_handler(_, __):
        stop_ambari_agent_process()
        sys.exit(0)


    signal.signal(signal.SIGTERM, stop_handler)
    signal.signal(signal.SIGINT, stop_handler)

    agent_process = start_ambari_agent_process()
    agent_process.wait()

    error("Agent stopped externally")
    sys.exit(1)
