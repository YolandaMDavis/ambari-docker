#!/usr/bin/env python3
from __future__ import print_function

import argparse

from ambari_docker.image_builder import build_ambari_agent_image, build_ambari_server_image

DESCRIPTION = """Simple script to build docker images with Ambari Server and Ambari Agent daemons in it.
Images will contain necessary bin to run server and agent on container startup. DO NOT provide CMD or ENTRYPOINT
for resulting images, they already configured to start supervisorctl.
"""

parser = argparse.ArgumentParser(description=DESCRIPTION)
parser.add_argument("-s", "--server", help="build server image", action='store_true', default=False)
parser.add_argument("-c", "--client", help="build client image", action='store_true', default=False)
parser.add_argument("-sic", "--server-include-client", help="server image will include client as well",
                    action='store_true', default=False)
parser.add_argument("-r", "--repository", help="ambari repository url", required=True)
parser.add_argument("-sbi", "--server-base-image", help="server base image", default=None)
parser.add_argument("-abi", "--agent-base-image", help="agent base image", default=None)
options = parser.parse_args()
# TODO options for less verbose output; format verbose docker output; add fancy logging, operation times, etc.

if __name__ == "__main__":
    if not (options.server_include_client or options.server or options.client):
        parser.error("one of '-s', '-c' or '-sic' must be specified")

    if options.server_include_client:
        options.server = True
        options.client = True
        if options.server_base_image:
            print("warning, '--server-base-image'('-sbi') option ignored because server image will \
            be based on agent image")

    agent_image = None
    server_image = None

    if options.client:
        agent_image = build_ambari_agent_image(options.repository, options.agent_base_image)
    if options.server:
        if options.server_include_client:
            server_image = build_ambari_server_image(options.repository, agent_image)
        else:
            server_image = build_ambari_server_image(options.repository, options.server_base_image)

    if options.client:
        print("Resulting agent image :{0}".format(agent_image))
    if options.server:
        print("Resulting server image:{0}".format(server_image))
