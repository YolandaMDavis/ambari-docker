#!/usr/bin/env python3
from __future__ import print_function

import argparse

from ambari_docker.image_builder import build_ambari_agent_image, build_ambari_server_image
from ambari_docker.utils import StdoutLogger
from ambari_docker import config

LOG = StdoutLogger()
DESCRIPTION = """Simple script to build docker images with Ambari Server and Ambari Agent daemons in it.
Images will contain necessary bits to run server and agent on container startup. DO NOT provide CMD or ENTRYPOINT
for resulting images, they already configured to start supervisorctl.
"""

parser = argparse.ArgumentParser(description=DESCRIPTION)
parser.add_argument("-s", "--server", help="build server image", action='store_true', default=False)
parser.add_argument("-c", "--client", help="build client image", action='store_true', default=False)
parser.add_argument("-sic", "--server-include-client", help="server image will include client as well",
                    action='store_true', default=False)
parser.add_argument("-r", "--repository", help="ambari repository url", required=True)
parser.add_argument("-sbi", "--server-base-image", help="server base image", default=None)
parser.add_argument("-abi", "--agent-base-image", help="agent base image", default=None)
parser.add_argument("-v", "--verbose", help="print docker commands output", action='store_true', default=False)
parser.add_argument("-vv", "--very-verbose", help="print docker commands output and docker files content",
                    action='store_true', default=False)
parser.add_argument("-m", "--mpacks", help="mpack to be included in server image",
                    nargs="+", type=str, default=[])
options = parser.parse_args()

if __name__ == "__main__":
    if not (options.server_include_client or options.server or options.client):
        parser.error("one of '-s', '-c' or '-sic' must be specified")

    if options.server_include_client:
        options.server = True
        options.client = True
        if options.server_base_image:
            LOG.info("warning, '--server-base-image'('-sbi') option ignored because server image will \
            be based on agent image")

    if options.verbose:
        config.log_docker_cmd_output = True

    if options.very_verbose:
        config.log_dockerfile = True
        config.log_docker_cmd_output = True

    agent_image = None
    server_image = None

    if options.client:
        agent_image = build_ambari_agent_image(options.repository, options.agent_base_image)
    if options.server:
        base_server_image = agent_image if options.server_include_client else options.server_base_image
        server_image = build_ambari_server_image(options.repository, options.server_base_image, mpacks=options.mpacks)

    if options.client:
        LOG.info(f"Resulting agent image :{agent_image}")
    if options.server:
        LOG.info(f"Resulting server image:{server_image}")
